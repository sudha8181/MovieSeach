{"ast":null,"code":"var _jsxFileName = \"D:\\\\sudha\\\\react\\\\movie\\\\src\\\\Context.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport Movie from './Home/Movie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/React.createContext();\nconst AppProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [isLoading, setIsLoading] = useState(true);\n  const [movie, setMovie] = useState([]);\n  const [, setIsError] = useContext({\n    show: \"false\",\n    msg: \"\"\n  });\n  const url = \"https://omdbapi.com/?apikey=9f698cae&s=titanic\";\n  const getApi = async () => {\n    try {\n      let getData = await fetch(url);\n      getData = getData.json();\n      console.log(getData);\n      if (getData.Response === \"true\") {\n        setIsLoading(false);\n        setMovie(getData.Search);\n      } else {\n        setIsError({\n          show: \"true\",\n          msg: \"error\"\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getApi();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: movie,\n    children: /*#__PURE__*/_jsxDEV(Movie, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 12\n  }, this);\n};\n\n//GLOBAL context hook\n_s(AppProvider, \"9kUL6hDvB3bu/J7bwpBqLSefFJw=\");\n_c = AppProvider;\nconst useGlobalContext = () => {\n  _s2();\n  return useContext(AppContext);\n};\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport { AppProvider, AppContext, useGlobalContext };\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","Movie","jsxDEV","_jsxDEV","AppContext","AppProvider","_ref","_s","children","isLoading","setIsLoading","movie","setMovie","setIsError","show","msg","url","getApi","getData","fetch","json","console","log","Response","Search","error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useGlobalContext","_s2","$RefreshReg$"],"sources":["D:/sudha/react/movie/src/Context.js"],"sourcesContent":["import React, { createContext,useContext, useEffect, useState } from 'react';\r\nimport Movie from './Home/Movie';\r\n\r\n\r\nconst AppContext=React.createContext();\r\n\r\nconst AppProvider=({children})=>{\r\n\r\n    const[isLoading,setIsLoading]=useState(true);\r\n    const[movie,setMovie]=useState([]);\r\n    const[,setIsError]=useContext({show:\"false\",msg:\"\"});\r\n\r\n    const url=\"https://omdbapi.com/?apikey=9f698cae&s=titanic\";\r\n    \r\n    const getApi=async()=>{\r\n     try {\r\n         let getData=await fetch(url);\r\n         getData=getData.json();\r\n         console.log(getData);\r\n         if(getData.Response===\"true\")\r\n         {\r\n            setIsLoading(false);\r\n            setMovie(getData.Search);\r\n            \r\n         }else{\r\n            setIsError({\r\n                show:\"true\",\r\n                msg:\"error\"});\r\n         }\r\n       \r\n   \r\n     } catch (error) {\r\n        console.log(error);\r\n     }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getApi();\r\n    },[]);\r\n    \r\n   return (<AppContext.Provider value={movie}>\r\n \r\n\r\n  <Movie/>\r\n   </AppContext.Provider>\r\n   );  \r\n       \r\n}\r\n\r\n    //GLOBAL context hook\r\n\r\n    const useGlobalContext=()=>{\r\n        return useContext(AppContext);\r\n    }\r\n\r\n\r\nexport {AppProvider,AppContext,useGlobalContext};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAACC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC5E,OAAOC,KAAK,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGjC,MAAMC,UAAU,gBAACR,KAAK,CAACC,aAAa,CAAC,CAAC;AAEtC,MAAMQ,WAAW,GAACC,IAAA,IAAc;EAAAC,EAAA;EAAA,IAAb;IAACC;EAAQ,CAAC,GAAAF,IAAA;EAEzB,MAAK,CAACG,SAAS,EAACC,YAAY,CAAC,GAACV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAK,CAACW,KAAK,EAACC,QAAQ,CAAC,GAACZ,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAK,GAAEa,UAAU,CAAC,GAACf,UAAU,CAAC;IAACgB,IAAI,EAAC,OAAO;IAACC,GAAG,EAAC;EAAE,CAAC,CAAC;EAEpD,MAAMC,GAAG,GAAC,gDAAgD;EAE1D,MAAMC,MAAM,GAAC,MAAAA,CAAA,KAAS;IACrB,IAAI;MACA,IAAIC,OAAO,GAAC,MAAMC,KAAK,CAACH,GAAG,CAAC;MAC5BE,OAAO,GAACA,OAAO,CAACE,IAAI,CAAC,CAAC;MACtBC,OAAO,CAACC,GAAG,CAACJ,OAAO,CAAC;MACpB,IAAGA,OAAO,CAACK,QAAQ,KAAG,MAAM,EAC5B;QACGb,YAAY,CAAC,KAAK,CAAC;QACnBE,QAAQ,CAACM,OAAO,CAACM,MAAM,CAAC;MAE3B,CAAC,MAAI;QACFX,UAAU,CAAC;UACPC,IAAI,EAAC,MAAM;UACXC,GAAG,EAAC;QAAO,CAAC,CAAC;MACpB;IAGJ,CAAC,CAAC,OAAOU,KAAK,EAAE;MACbJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;IACrB;EACD,CAAC;EAED1B,SAAS,CAAC,MAAI;IACVkB,MAAM,CAAC,CAAC;EACZ,CAAC,EAAC,EAAE,CAAC;EAEN,oBAAQd,OAAA,CAACC,UAAU,CAACsB,QAAQ;IAACC,KAAK,EAAEhB,KAAM;IAAAH,QAAA,eAG3CL,OAAA,CAACF,KAAK;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAGzB,CAAC;;AAEG;AAAAxB,EAAA,CA3CEF,WAAW;AAAA2B,EAAA,GAAX3B,WAAW;AA6Cb,MAAM4B,gBAAgB,GAACA,CAAA,KAAI;EAAAC,GAAA;EACvB,OAAOpC,UAAU,CAACM,UAAU,CAAC;AACjC,CAAC;AAAA8B,GAAA,CAFKD,gBAAgB;AAK1B,SAAQ5B,WAAW,EAACD,UAAU,EAAC6B,gBAAgB;AAAE,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}