{"ast":null,"code":"var _jsxFileName = \"D:\\\\sudha\\\\react\\\\movie\\\\src\\\\Context.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport Movie from './Home/Movie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = `https://omdbapi.com/?apikey=9f698cae`;\nconst AppContext = /*#__PURE__*/React.createContext();\nconst AppProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [isLoading, setIsLoading] = useState(true);\n  const [movie, setMovie] = useState([]);\n  const [isError, setIsError] = useState({\n    show: \"false\",\n    msg: \"\"\n  });\n  const [search, setSearch] = useState(\"titanic\");\n  const getApi = async url => {\n    try {\n      const res = await fetch(url);\n      const data = await res.json();\n      if (data.Response === \"True\") {\n        setIsLoading(false);\n        setMovie(data.Search);\n      } else {\n        setIsError({\n          show: \"true\",\n          msg: data.error\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    setTimeout(() => {\n      getApi(`${url}&s=${search}`);\n    }, 1000);\n  }, [search]);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      isLoading,\n      isError,\n      movie,\n      search,\n      setSearch,\n      isError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 12\n  }, this);\n};\n\n//GLOBAL context hook\n_s(AppProvider, \"4nEyg0r9ZdORa9eD/xCFpXJvnf4=\");\n_c = AppProvider;\nconst useGlobalContext = () => {\n  _s2();\n  return useContext(AppContext);\n};\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport { AppProvider, AppContext };\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","Movie","jsxDEV","_jsxDEV","url","AppContext","AppProvider","_ref","_s","children","isLoading","setIsLoading","movie","setMovie","isError","setIsError","show","msg","search","setSearch","getApi","res","fetch","data","json","Response","Search","error","console","log","setTimeout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useGlobalContext","_s2","$RefreshReg$"],"sources":["D:/sudha/react/movie/src/Context.js"],"sourcesContent":["import React, { createContext,useContext, useEffect, useState } from 'react';\r\nimport Movie from './Home/Movie';\r\n\r\nconst url=`https://omdbapi.com/?apikey=9f698cae`;\r\nconst AppContext=React.createContext();\r\n\r\nconst AppProvider=({children})=>{\r\n\r\n    const[isLoading,setIsLoading]=useState(true);\r\n    const[movie,setMovie]=useState([]);\r\n    const[isError,setIsError]=useState({show:\"false\",msg:\"\"});\r\n    const[search,setSearch]=useState(\"titanic\")\r\n\r\n   \r\n\r\n    const getApi=async(url)=>{\r\n     try {\r\n       const res=await fetch(url);\r\n       const data= await res.json();\r\n       if(data.Response===\"True\")\r\n         {\r\n            setIsLoading(false);\r\n            setMovie(data.Search);\r\n            \r\n         }else{\r\n            setIsError({\r\n                show:\"true\",\r\n                msg:data.error}\r\n                );\r\n         }\r\n       \r\n   \r\n     } catch (error) {\r\n        console.log(error);\r\n     }\r\n    }\r\n\r\n    useEffect(()=>{\r\n\r\n        setTimeout(() => {\r\n            getApi(`${url}&s=${search}`);   \r\n        }, 1000);\r\n        \r\n    },[search]);\r\n    \r\n   return (<AppContext.Provider value={{isLoading,isError,movie,search,setSearch,isError}}>\r\n     {children}\r\n   </AppContext.Provider>\r\n   );  \r\n       \r\n}\r\n\r\n    //GLOBAL context hook\r\n\r\n    const useGlobalContext=()=>{\r\n        return useContext(AppContext);\r\n    }\r\n\r\n\r\nexport {AppProvider,AppContext};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAACC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC5E,OAAOC,KAAK,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,GAAG,GAAE,sCAAqC;AAChD,MAAMC,UAAU,gBAACT,KAAK,CAACC,aAAa,CAAC,CAAC;AAEtC,MAAMS,WAAW,GAACC,IAAA,IAAc;EAAAC,EAAA;EAAA,IAAb;IAACC;EAAQ,CAAC,GAAAF,IAAA;EAEzB,MAAK,CAACG,SAAS,EAACC,YAAY,CAAC,GAACX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAK,CAACY,KAAK,EAACC,QAAQ,CAAC,GAACb,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAK,CAACc,OAAO,EAACC,UAAU,CAAC,GAACf,QAAQ,CAAC;IAACgB,IAAI,EAAC,OAAO;IAACC,GAAG,EAAC;EAAE,CAAC,CAAC;EACzD,MAAK,CAACC,MAAM,EAACC,SAAS,CAAC,GAACnB,QAAQ,CAAC,SAAS,CAAC;EAI3C,MAAMoB,MAAM,GAAC,MAAMhB,GAAG,IAAG;IACxB,IAAI;MACF,MAAMiB,GAAG,GAAC,MAAMC,KAAK,CAAClB,GAAG,CAAC;MAC1B,MAAMmB,IAAI,GAAE,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;MAC5B,IAAGD,IAAI,CAACE,QAAQ,KAAG,MAAM,EACvB;QACGd,YAAY,CAAC,KAAK,CAAC;QACnBE,QAAQ,CAACU,IAAI,CAACG,MAAM,CAAC;MAExB,CAAC,MAAI;QACFX,UAAU,CAAC;UACPC,IAAI,EAAC,MAAM;UACXC,GAAG,EAACM,IAAI,CAACI;QAAK,CACd,CAAC;MACR;IAGJ,CAAC,CAAC,OAAOA,KAAK,EAAE;MACbC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACrB;EACD,CAAC;EAED5B,SAAS,CAAC,MAAI;IAEV+B,UAAU,CAAC,MAAM;MACbV,MAAM,CAAE,GAAEhB,GAAI,MAAKc,MAAO,EAAC,CAAC;IAChC,CAAC,EAAE,IAAI,CAAC;EAEZ,CAAC,EAAC,CAACA,MAAM,CAAC,CAAC;EAEZ,oBAAQf,OAAA,CAACE,UAAU,CAAC0B,QAAQ;IAACC,KAAK,EAAE;MAACtB,SAAS;MAACI,OAAO;MAACF,KAAK;MAACM,MAAM;MAACC,SAAS;MAACL;IAAO,CAAE;IAAAL,QAAA,EACpFA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAGzB,CAAC;;AAEG;AAAA5B,EAAA,CA9CEF,WAAW;AAAA+B,EAAA,GAAX/B,WAAW;AAgDb,MAAMgC,gBAAgB,GAACA,CAAA,KAAI;EAAAC,GAAA;EACvB,OAAOzC,UAAU,CAACO,UAAU,CAAC;AACjC,CAAC;AAAAkC,GAAA,CAFKD,gBAAgB;AAK1B,SAAQhC,WAAW,EAACD,UAAU;AAAE,IAAAgC,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}