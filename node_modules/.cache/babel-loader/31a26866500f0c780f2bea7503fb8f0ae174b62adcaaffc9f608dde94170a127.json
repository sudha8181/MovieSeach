{"ast":null,"code":"var _jsxFileName = \"D:\\\\sudha\\\\react\\\\movie\\\\src\\\\Context.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport Movie from './Home/Movie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = \"https://omdbapi.com/?apikey=9f698cae&s=titanic\";\nconst AppContext = /*#__PURE__*/React.createContext();\nconst AppProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [isLoading, setIsLoading] = useState(true);\n  const [movie, setMovie] = useState([]);\n  const [isError, setIsError] = useState({\n    show: \"false\",\n    msg: \"\"\n  });\n  const getApi = async () => {\n    try {\n      const res = await fetch(url);\n      const data = await res.json();\n      alert(data.Search);\n      if (data.Response === \"True\") {\n        setIsLoading(false);\n        setMovie(data.Search);\n      } else {\n        setIsError({\n          show: \"true\",\n          msg: data.error\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    getApi();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      movie\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 12\n  }, this);\n};\n\n//GLOBAL context hook\n_s(AppProvider, \"UOWIjLZY/YYuE1WWhNiIp6LeF8M=\");\n_c = AppProvider;\nconst useGlobalContext = () => {\n  _s2();\n  return useContext(AppContext);\n};\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport { AppProvider, AppContext };\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","Movie","jsxDEV","_jsxDEV","url","AppContext","AppProvider","_ref","_s","children","isLoading","setIsLoading","movie","setMovie","isError","setIsError","show","msg","getApi","res","fetch","data","json","alert","Search","Response","error","console","log","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useGlobalContext","_s2","$RefreshReg$"],"sources":["D:/sudha/react/movie/src/Context.js"],"sourcesContent":["import React, { createContext,useContext, useEffect, useState } from 'react';\r\nimport Movie from './Home/Movie';\r\n\r\nconst url=\"https://omdbapi.com/?apikey=9f698cae&s=titanic\";\r\nconst AppContext=React.createContext();\r\n\r\nconst AppProvider=({children})=>{\r\n\r\n    const[isLoading,setIsLoading]=useState(true);\r\n    const[movie,setMovie]=useState([]);\r\n    const[isError,setIsError]=useState({show:\"false\",msg:\"\"});\r\n\r\n   \r\n\r\n    const getApi=async()=>{\r\n     try {\r\n       const res=await fetch(url);\r\n       const data= await res.json();\r\n       alert(data.Search);\r\n       if(data.Response===\"True\")\r\n         {\r\n            setIsLoading(false);\r\n            setMovie(data.Search);\r\n            \r\n         }else{\r\n            setIsError({\r\n                show:\"true\",\r\n                msg:data.error}\r\n                );\r\n         }\r\n       \r\n   \r\n     } catch (error) {\r\n        console.log(error);\r\n     }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getApi();\r\n    },[]);\r\n    \r\n   return (<AppContext.Provider value={{movie}}>\r\n     {children}\r\n   </AppContext.Provider>\r\n   );  \r\n       \r\n}\r\n\r\n    //GLOBAL context hook\r\n\r\n    const useGlobalContext=()=>{\r\n        return useContext(AppContext);\r\n    }\r\n\r\n\r\nexport {AppProvider,AppContext};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAACC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC5E,OAAOC,KAAK,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,GAAG,GAAC,gDAAgD;AAC1D,MAAMC,UAAU,gBAACT,KAAK,CAACC,aAAa,CAAC,CAAC;AAEtC,MAAMS,WAAW,GAACC,IAAA,IAAc;EAAAC,EAAA;EAAA,IAAb;IAACC;EAAQ,CAAC,GAAAF,IAAA;EAEzB,MAAK,CAACG,SAAS,EAACC,YAAY,CAAC,GAACX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAK,CAACY,KAAK,EAACC,QAAQ,CAAC,GAACb,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAK,CAACc,OAAO,EAACC,UAAU,CAAC,GAACf,QAAQ,CAAC;IAACgB,IAAI,EAAC,OAAO;IAACC,GAAG,EAAC;EAAE,CAAC,CAAC;EAIzD,MAAMC,MAAM,GAAC,MAAAA,CAAA,KAAS;IACrB,IAAI;MACF,MAAMC,GAAG,GAAC,MAAMC,KAAK,CAAChB,GAAG,CAAC;MAC1B,MAAMiB,IAAI,GAAE,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;MAC5BC,KAAK,CAACF,IAAI,CAACG,MAAM,CAAC;MAClB,IAAGH,IAAI,CAACI,QAAQ,KAAG,MAAM,EACvB;QACGd,YAAY,CAAC,KAAK,CAAC;QACnBE,QAAQ,CAACQ,IAAI,CAACG,MAAM,CAAC;MAExB,CAAC,MAAI;QACFT,UAAU,CAAC;UACPC,IAAI,EAAC,MAAM;UACXC,GAAG,EAACI,IAAI,CAACK;QAAK,CACd,CAAC;MACR;IAGJ,CAAC,CAAC,OAAOA,KAAK,EAAE;MACbC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACrB;EACD,CAAC;EAED3B,SAAS,CAAC,MAAI;IACVmB,MAAM,CAAC,CAAC;EACZ,CAAC,EAAC,EAAE,CAAC;EAEN,oBAAQf,OAAA,CAACE,UAAU,CAACwB,QAAQ;IAACC,KAAK,EAAE;MAAClB;IAAK,CAAE;IAAAH,QAAA,EACzCA;EAAQ;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAGzB,CAAC;;AAEG;AAAA1B,EAAA,CA1CEF,WAAW;AAAA6B,EAAA,GAAX7B,WAAW;AA4Cb,MAAM8B,gBAAgB,GAACA,CAAA,KAAI;EAAAC,GAAA;EACvB,OAAOvC,UAAU,CAACO,UAAU,CAAC;AACjC,CAAC;AAAAgC,GAAA,CAFKD,gBAAgB;AAK1B,SAAQ9B,WAAW,EAACD,UAAU;AAAE,IAAA8B,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}